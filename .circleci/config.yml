version: 2.0
jobs:
  libchromiumcontent-linux-x64-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: x64
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.zip

  libchromiumcontent-linux-x64-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: x64
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.zip

  libchromiumcontent-linux-ia32-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: ia32
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.zip

  libchromiumcontent-linux-ia32-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: ia32
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.zip

  libchromiumcontent-linux-arm-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: arm
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.zip

  libchromiumcontent-linux-arm-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: arm
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.zip

  libchromiumcontent-linux-arm64-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: arm64
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.zip

  libchromiumcontent-linux-arm64-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: arm64
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.zip

  libchromiumcontent-linux-mips64el-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: mips64el
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.zip

  libchromiumcontent-linux-mips64el-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: mips64el
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.zip

workflows:
  version: 2
  build-x64:
    jobs:
      - libchromiumcontent-linux-x64-shared
      - libchromiumcontent-linux-x64-static
  build-ia32:
    jobs:
      - libchromiumcontent-linux-ia32-shared
      - libchromiumcontent-linux-ia32-static
  build-arm:
    jobs:
      - libchromiumcontent-linux-arm-shared
      - libchromiumcontent-linux-arm-static
  build-arm64:
    jobs:
      - libchromiumcontent-linux-arm64-shared
      - libchromiumcontent-linux-arm64-static
